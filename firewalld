#!/bin/bash

#|--------------------------------------------------------------------------
# Firewall GeoIP script for firewalld
#
# Written by Simon Bouchard <sbouchard@layer7.email>
# Refactored and inspired from https://gist.github.com/Pandry/21fc0e30abbfd0579ec69c491b99a446
#
# Created: Mars 2022
#
# You may use, modify, and redistribute this script freely
#|--------------------------------------------------------------------------

#|--------------------------------------------------------------------------
#| Options
#|--------------------------------------------------------------------------

ZONES="ru by" # Retrieve the zone's name here https://www.ipdeny.com/ipblocks/
BLACKLIST="geoip-blacklist"
TMPDIR="/tmp/geoip"

#|--------------------------------------------------------------------------
#| Colors
#|--------------------------------------------------------------------------

RED='\033[0;91m'
GREEN='\033[0;92m'
CYAN='\033[0;96m'
YELLOW='\033[0;93m'
PURPLE='\033[0;95m'
BLUE='\033[0;94m'
BOLD='\033[1m'
NC='\033[0m'

#|--------------------------------------------------------------------------
#| Global variables
#|--------------------------------------------------------------------------

FIREWALLD="$(which firewalld)"
YUM="$(which yum)"
APT="$(which apt)"
APK="$(which apk)"
SCRIPT="$0"

#|--------------------------------------------------------------------------
#| Main
#|--------------------------------------------------------------------------

if [[ -x "$YUM" ]]; then
    OS="RHEL"
    echo -e "[${PURPLE}i${NC}] Detected operating system as RHEL/CentOS"
elif [[ -x "$APT" ]]; then
    OS="DEBIAN"
    echo -e "[${PURPLE}i${NC}] Detected operating system as Debian/Ubuntu"
else
    echo -e "[${RED}✗${NC}] Couldn't determine the current OS. Aborting!"
    exit 1
fi

echo -e "[${PURPLE}i${NC}] Verifying if firewalld is available"
if ! [[ -x "$FIREWALLD" ]]; then
    echo -e "[${PURPLE}i${NC}] firewalld not available, installing"
    if [[ "$OS" == "RHEL" ]]; then
        yum -y install firewalld > /dev/null 2> /dev/null
        if [[ $? -eq 0 ]]; then
            echo -e "[${GREEN}✓${NC}] firewalld is installed"
            systemctl enable --now firewalld > /dev/null 2> /dev/null
        else
            echo -e "[${RED}✗${NC}] Couldn't install firewalld. Aborting!"
            exit 1
        fi
    elif [[ "$OS" == "DEBIAN" ]]; then
        apt -y install firewalld > /dev/null 2> /dev/null
        if [[ $? -eq 0 ]]; then
            echo -e "[${GREEN}✓${NC}] firewalld is installed"
            systemctl enable --now firewalld > /dev/null 2> /dev/null
        else
            echo -e "[${RED}✗${NC}] Couldn't install firewalld. Aborting!"
            exit 1
        fi
    fi
else
echo -e "[${GREEN}✓${NC}] firewalld is installed"
fi

echo ""

echo -e "[${PURPLE}i${NC}] Checking for existing ipset for ${BLACKLIST}-ip4"
if firewall-cmd --permanent --get-ipsets | grep -q "${BLACKLIST}-ip4"; then
    echo -e "[${PURPLE}i${NC}] Deleting ipset ${BLACKLIST}-ip4"
    firewall-cmd --permanent --zone=drop --remove-source=ipset:"${BLACKLIST}-ip4" &> /dev/null
    firewall-cmd --reload &> /dev/null
    firewall-cmd --permanent --delete-ipset="${BLACKLIST}-ip4" &> /dev/null
fi

echo -e "[${PURPLE}i${NC}] Creating new ipset for ${BLACKLIST}-ip4"
firewall-cmd --permanent --new-ipset="${BLACKLIST}-ip4" --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000 --zone=drop > /dev/null 2> /dev/null
if [[ $? -eq 0 ]];then
    echo -e "[${GREEN}✓${NC}] ipset for ${BLACKLIST}-ip4 successfully created"
else
    echo -e "[${RED}✗${NC}] Couldn't create the blacklist ${BLACKLIST}-ip4. Aborting!"
    exit 1
fi

echo ""

echo -e "[${PURPLE}i${NC}] Checking for existing ipset for ${BLACKLIST}-ip6"
if firewall-cmd --permanent --get-ipsets | grep -q "${BLACKLIST}-ip6"; then
    echo -e "[${PURPLE}i${NC}] Deleting ipset ${BLACKLIST}-ip6"
    firewall-cmd --permanent --zone=drop --remove-source=ipset:"${BLACKLIST}-ip6" &> /dev/null
    firewall-cmd --reload &> /dev/null
    firewall-cmd --permanent --delete-ipset="${BLACKLIST}-ip6" &> /dev/null
fi

echo -e "[${PURPLE}i${NC}] Creating new ipset for ${BLACKLIST}-ip6"
firewall-cmd --permanent --new-ipset="${BLACKLIST}-ip6" --type=hash:net --option=family=inet6 --option=hashsize=4096 --option=maxelem=200000 --zone=drop > /dev/null 2> /dev/null
if [[ $? -eq 0 ]];then
    echo -e "[${GREEN}✓${NC}] ipset for ${BLACKLIST}-ip6 successfully created"
else
    echo -e "[${RED}✗${NC}] Couldn't create the blacklist ${BLACKLIST}-ip6. Aborting!"
    exit 1
fi

echo ""

# Create the tmp directory
mkdir -p $TMPDIR

if [[ $? -eq 0 ]];then
    echo -e "[${PURPLE}i${NC}] Retrieving the requested zones to be blacklisted"
    echo ""
    for z in $ZONES; do
        echo -e "[${PURPLE}i${NC}] Downloading zone ${YELLOW}$z${NC}"
        curl -s -L -o "$TMPDIR/$z-ip4.zone" "https://www.ipdeny.com/ipblocks/data/aggregated/${z,,}-aggregated.zone" > /dev/null 2> /dev/null
        curl -s -L -o "$TMPDIR/$z-ip6.zone" "https://www.ipdeny.com/ipv6/ipaddresses/aggregated/${z,,}-aggregated.zone" > /dev/null 2> /dev/null
        if [[ $? -eq 0 ]];then
            echo -e "[${GREEN}✓${NC}] OK"
        else
            echo -e "[${RED}✗${NC}] Failed"
        fi
        echo ""
    done
    if [[ $? -eq 0 ]];then
        echo -e "[${GREEN}✓${NC}] All zones were successfully downloaded"
        echo ""
    else
        echo -e "[${RED}✗${NC}] Failed to download all the requested zones. Aborting!"
        exit 1
    fi
else
    echo -e "[${RED}✗${NC}] Couldn't create the $TMPDIR directory. Aborting!"
    exit 1
fi

# Load the zone(s) into the blacklist
for f in "$TMPDIR"/*-ip4.zone; do
    echo -e "[${PURPLE}i${NC}] Adding ipv4 target ranges from ${YELLOW}$f${NC}"
    firewall-cmd --permanent --ipset="${BLACKLIST}-ip4" --add-entries-from-file="$f" > /dev/null
    if [[ $? -eq 0 ]];then
        echo -e "[${GREEN}✓${NC}] OK"
    else
        echo -e "[${RED}✗${NC}] Failed"
    fi
    echo ""
done

for f in "$TMPDIR"/*-ip6.zone; do
    echo -e "[${PURPLE}i${NC}] Adding ipv6 target ranges from ${YELLOW}$f${NC}"
    firewall-cmd --permanent --ipset="${BLACKLIST}-ip6" --add-entries-from-file="$f" > /dev/null
    if [[ $? -eq 0 ]];then
        echo -e "[${GREEN}✓${NC}] OK"
    else
        echo -e "[${RED}✗${NC}] Failed"
    fi
    echo ""
done

# Initialize the firewall
echo -e "[${PURPLE}i${NC}] Initializing firewalld"
firewall-cmd --permanent --zone=drop --add-source="ipset:${BLACKLIST}-ip4" > /dev/null
firewall-cmd --permanent --zone=drop --add-source="ipset:${BLACKLIST}-ip6" > /dev/null

# Reload the firewall
echo -e "[${PURPLE}i${NC}] Reloading firewalld"
firewall-cmd --reload > /dev/null

echo -e "[${PURPLE}i${NC}] Cleaning up..."

rm -rf $TMPDIR

echo ""

IPV4_COUNT=$(firewall-cmd --permanent --ipset=${BLACKLIST}-ip4 --get-entries | wc -l)
IPV6_COUNT=$(firewall-cmd --permanent --ipset=${BLACKLIST}-ip6 --get-entries | wc -l)

echo -e "[${PURPLE}i${NC}] Blocking approx. ${YELLOW}${IPV4_COUNT}${NC} ipv4 target ranges and approx. ${YELLOW}${IPV6_COUNT}${NC} ipv6 target ranges."

echo -e "[${GREEN}✓${NC}] Firewall successfully configured!"
